syntax="proto3";

package payment.api;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "payment/api/api_types.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "gitlab.mapcard.pro/external-map-team/api-proto/payment/api;block_types";

//
// Block method issues
//
message BlockRequest {
  string key = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Идентификатор Продавца. Выдается с параметрами тестового/боевого доступа",
    format: "string"
  }];
  PayInfo card = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Данные карты для совершения транзакции",
    format: "object"
  }];
  PaymentToken payment_token = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Токен gpay/applepay/samsungpay",
    format: "object"
  }];
  string merchant_order_id = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Идентификатор платежа в системе Продавца",
    format: "string"
  }];	
  uint32 amount  = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Сумма платежа в копейках (или другая минимальная единица валюты терминала)",
    format: "integer"
  }];	
  Credential credential = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Подтверждение прав доступа и информация об операторе",
    format: "object"
  }];	
  KeyValueArray custom_params_rdy = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Список дополнительных параметров операции в формате 'ключ - значение'",
    format: "object"
  }];
  repeated Split split = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Используется для разделение суммы произведенного списания на составные части для последующих расчетов с контрагентами. Общая сумма всех составных частей должна соответствовать amount",
    format: "object"
  }];
  PayoutInfo payout_info = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Номер карты для зачисления средств, обязательный при операция C2C",
    format: "object"
  }];
}

message Split {
  uint32 split_terminal_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Номер терминала для проведения операции",
    format: "integer"
  }];
  uint32 amount = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Сумма разделения",
    format: "integer"
  }];
  string purpose = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Описание",
    format: "string"
  }];
  uint32 fee = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Размер комиссии",
    format: "integer"
  }];
}

message BlockHandler {
  bool Success = 1 	[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Флаг успешности операции	true/false",
    format: "true,false"
  }];	
  string OrderId = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Идентификатор платежа в системе Продавца",
    format: "string"
  }];
  uint32 Amount  = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Заблокированная сумма. Передается, если в ответе Success=true",
    format: "integer"
  }];	
  string AuthCode = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Код авторизации",
    format: "string"
  }];	
  string ErrCode = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Описание ошибки. Передается, если в ответе Success=false",
    format: "string"
  }];	
  string ErrMessage = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Опциональный параметр. Дополнительное описание ошибки",
    format: "string"
  }];
  string ACSUrl = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Адрес (URL/URI) сервера аутентификации 3-D Secure. Обязателен, если карта вовлечена в технологию 3-D Secure и Success=true",
    format: "string"
  }];
  string PaReq = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Запрос на аутентификацию 3-D Secure. Обязателен, если карта вовлечена в технологию 3-D Secure и Success=true",
    format: "string"
  }];
  string ThreeDSKey = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Уникальный идентификатор транзакции. Обязателен, если карта вовлечена в технологию 3-D Secure и Success=true",
    format: "string"
  }];
  string RRN = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "RRN операции",
    format: "string"
  }];
  string PANMask = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Маскированный номер карты в формате 123456xxxxxx1234",
    format: "string"
  }];
  string BankName = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Наименование Банка-эмитента",
    format: "string"
  }];
  string ProcessingResponse = 13 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Оригинальный отказ эквайера",
    format: "string"
  }];
  KeyValueArray CustomParams = 14 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Список дополнительных параметров операции",
    format: "object"
  }];
  uint32 FeePercent  = 15 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Ставка комиссии за эквайринг",
    format: "integer"
  }];
  uint32 TerminalID  = 16 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "ID терминала в системе MAP, по которому фактически выполнена операция",
    format: "integer"
  }];
  string SourceOffice = 17 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Идентификатор организации при оплате в GDS",
    format: "string"
  }];
}
